# VNF Resource Information Collector inputs
ric_purchasing_model: subscription    # The purchasing model for licensing (options include: subscription or perpetual).
ric_vnfm_serial: "12345"              # The VNFM license key provided in your email from F5 (used for support purposes only).
auto_last_hop: "disabled"             # Controls how the DAG receives return traffic from the internet. Enable this input, if you are using an F5 device to NAT outbound connections; otherwise, disable.

# VNF inputs
ctrl_net: control                     # Name of the control network, where F5 NFV solutions connect to processes such as, your policy and control rules function engine, subscriber service-charging functions, signaling, and other similar processes.
ctrl_subnet: control-subnet
ha_net: ha_net                        # The name of the high availability network (for config. sync and network failover purposes).
ha_subnet: ha-subnet

# Max number of 'instances' that can be created during scale out
# Max instances of DAG VE
max_scale_dag_group: '10'             # The maximum number of layers to which the DAG group will scale.
# Max instances of VNF Layers
max_scale_vnf_group: '10'             # The maximum number of layers to which the VNF group will scale.

# Max number of 'instances' that can be created during heal
max_heal_vnfd_dag_ve: '10'            # Maximum number of times a DAG VE will heal before it stops trying and shows an error.
max_heal_vnf_layer: '10'              # Maximum number of times a layer will heal before it stops trying and returns an error.
max_heal_vnf_slave_ve: '10'           # Maximum number of times a slave VE will heal before it stops trying and returns an error.

# Nagios inputs
floating_network_id: fa541932-4156-4185-8344-a961cf4c8e41      # The OpenStack ID or name of the external network where you assigned a floating IP addresses (for example, external_net). This input is optional for versions 1.2.2 and later.

# VNF Layer scaling inputs
vnf_layer_cpu_threshold: '85'         # Maximum number of times a slave VE will heal before it stops trying and returns an error.
vnf_layer_cpu_threshold_check_interval: '1'    # Interval between checks, in minutes.
# VNF Group scaling inputs
vnf_group_throughput: '20'            # The desired aggregate throughput (Gigabits In Out) for every layer in the group. Example values: 5 for 5 gig, 0 for 10 gig, 0.5 for 500mb.
vnf_group_throughput_threshold: '75'  # New layer is added to group when the percentage of average aggregate layer throughput exceeds this value (for example, 75).
vnf_group_throughput_check_interval: '1'    # Interval between checks, in minutes.
# DAG Group scaling inputs
dag_group_cpu_threshold: '89'         # New instance is added to group when the percentage of average aggregate Global TMM CPU usage of all DAG group instances exceeds this value (for example, 75).
dag_group_cpu_threshold_check_interval: '1'    # Interval between checks, in minutes.

# vnic SR-IOV binding types
vnic_binding_type:     # Required dictionary used to define the type of NIC in OpenStack. Default value is set to "normal". Options include: normal, macvtap, direct, baremetal, direct-physical, virtio-forwarder, and smart-nic.
  mgmt_port: "normal"
  ha_port: "normal"
  ctrl_port: "normal"
  pdn_dag_port: "normal"
  pgw_dag_port: "normal"
  pgw_port: "normal"
  pdn_port: "normal"
  vip_pgw_dag_port: "normal"
  vip_pdn_dag_port: "normal"

# Common inputs
manager_mgmt_host: 10.0.0.106         # The internal IP address of the VNF Manager instance.
security_groups: enable               # String value to enable/disable security groups for Nagios, DAG, and VNF nodes. Enabling will include the appropriate security groups for Nagios, DAG, and VNF nodes, disabling will disable ALL security groups, including the default security group created for every instance in OpenStack.

sw_ref_nagios:                        # The dictionary that defines the image/template name, flavor/configuration name, availability zone (OpenStack only), and revision number to use for the CentOS monitoring nodes.
  data:
    image: CentOS-7-x86_64-GenericCloud
    flavor: m1.medium
    availability_zone: nova
  revision: 0
sw_ref_dag:                           # The dictionary that defines the image/template name, flavor/configuration name, availability zone (OpenStack only), and revision number to use for the BIG-IP VE disaggregation instances.
  data:
    image: BIGIP-13.1.0.5-0.0.5.ALL_1SLOT
    flavor: f5.cloudify_small
    availability_zone: nova
  revision: 0
sw_ref_vnf:                           # The dictionary that defines the image/template name, flavor/configuration name, availability zone (OpenStack only), and revision number to use for the BIG-IP VE virtual network functions instances.
  data:
    image: BIGIP-13.1.0.5-0.0.5.ALL_1SLOT
    flavor: f5.cloudify_medium
    availability_zone: nova
  revision: 0

bigip_ssh_key: key_name               # Name of the VIM SSH key that you will import into the BIG-IP VE instances.

big_iq_host: 10.0.0.121               # The IP address of the BIG-IQ VE instance that will assign licenses to the BIG-IP VE instances.
big_iq_lic_pool: BIGIP_4              # Name of the BIG-IQ key or pool that will be used to assign licenses to the BIG-IP VE instances.

ctrl_sg_name: control_sg              # The name of the pre-existing control security group.
mgmt_sg_name: mgmt_sg                 # The name of the pre-existing management security group.
pgw_sg_name: pgw_sg                   # The name of the pre-existing packet gateway (PGW) security group.
pdn_sg_name: pgw_sg                   # The name of the pre-existing provider data network (PDN) security group.
snmp_sg_name: snmp_sg                 # The name of the pre-existing SNMP security group.

mgmt_net: mgmt                        # The name of the pre-existing management OpenStack network  or VMware port group, connecting the BIG-IQ licensing utility, VNFM, and related blueprints that orchestrate BIG-IP VE service layers.
mgmt_subnet: mgmt-subnet              # The name of the pre-existing management network subnet.

pgw_net: pgw                          # Name of the OpenStack network or the VMware port group.
pgw_subnet: pgw-subnet                # The name of the pre-existing PGW sub-network.
pdn_net: pdn                          # Name of the OpenStack network or the VMware port group.
pdn_subnet: pdn-subnet                # The name of the pre-existing PDN network subnet.

pgw_dag_net: pgw_dag                  # Name of the OpenStack network or the VMware port group.
pgw_dag_subnet: pgw_dag-subnet        # The name of the pre-existing PGW-DAG network subnet.

pdn_dag_net: pdn_dag                  # Name of the OpenStack network or the VMware port group.
pdn_dag_subnet: pdn_dag-subnet

bgp_dag_pgw_peer_ip: 10.4.0.1         # If your environment uses Border Gateway Protocol (BGP) on the client-side, then enter the neighbor address of the PGW to which the DAG BIG-IPs will advertise their default routes.
bgp_vnf_pgw_peer_ip: 10.6.0.1         # If using BGP on the client-side, then enter the neighbor address of the PGW, enabling the VNF to send traffic directly back to the client without passing it back through the DAG.
bgp_pgw_peer_as: '65001'              # If using BGP on the client-side, then enter the autonomous system number (ASN) for the BGP neighbor.
bgp_dag_egw_peer_ip: 10.3.0.1         # If using BGP on the external-side, then enter the BGP neighbor address.
bgp_egw_peer_as: '65002'              # If using BGP on the external-side, then enter the BGP ASN.
default_gateway: 10.5.0.1             # The next hop IP address for outbound traffic egressing the VNF.

ntp_server: pool.ntp.org              # The IP address or DNS name of the NTP server. If not specified, the default 132.163.96.1 value is used.
timezone: America/Los_Angeles         # Enter the local timezone for the location of your application server; for example, Pacific/Pago_Pago. Default value is UTC. For acceptable values, consult https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.

# CGNAT Inputs
cgnat_ip_ranges:                      # Set for enabling CGNAT. Enter the IP address range for each address list. For example, '192.168.1.100-192.168.1.150' and '192.168.1.155-192.168.1.160'.
  - '10.10.44.32-10.10.44.164'
  - '192.168.1.155-192.168.1.160' 
cgnat_resource_id: '/f5vnf/gilan_http/natSourceTranslation/addresses'      # Set for enabling CGNAT. Value CANNOT be blank. Enter the reference to a NAT source translation pool that you want VNFM to manage and that you defined in your AS3 declaration. A pointer to the IP pool that you want VNFM to manage; for example, "/Sample_22/A1/natSourceTranslation/addresses".
starting_ip_number: '5'               # Set for enabling CGNAT. Enter the number of IP addresses initially assigned to each VNF VE. Default value is 5.  
increment_ip_number: '2'              # Set for enabling CGNAT. Enter the number of IP addresses to add during the Increment IPs workflow. Default value is 2.



# AS3 declaration used for non-CGNAT implementations
vnf_as3_nsd_payload:
class: ADC
schemaVersion: 3.0.0
id: cfy_vnf_01
label: vnf
remark: VNF
f5vnf:
  class: Tenant
  Shared:
    class: Application
    template: shared
    profileDiameterEndpointOcs:
      class: Enforcement_Diameter_Endpoint_Profile
      supportedApps:
      - Gy
      destinationRealm: f5net.com
      originHost: pcef.f5net.com
      originRealm: f5net.com
    profileDiameterEndpointPcrf:
      class: Enforcement_Diameter_Endpoint_Profile
      supportedApps:
      - Gx
      destinationRealm: f5net.com
      originHost: pcef.f5net.com
      originRealm: f5net.com
    endpointForwarding:
      addressTranslationEnabled: False
      class: Enforcement_Forwarding_Endpoint
      defaultPersistenceType: disabled
      fallbackPersistenceType: disabled
      persistenceHashSettings:
        length: 1024
        offset: 0
      pool:
        use: poolForwarding
      portTranslationEnabled: False
      sourcePortAction: preserve
    endpointInterception:
      class: Enforcement_Interception_Endpoint
      persistence: disabled
      pool:
        use: poolInterception
    endpointServiceChain:
      class: Enforcement_Service_Chain_Endpoint
      serviceEndpoints:
      - forwardingEndpoint:
          use: endpointForwarding
        name: myServiceEndpoint
        sourceVLAN:
          bigip: /Common/pgw_dag
        steeringPolicy:
          use: policyEnforcement
    poolForwarding:
      class: Pool
      members:
      - enable: True
        serverAddresses:
        - 255.255.255.2
        servicePort: 8081
    poolInterception:
      class: Pool
      members:
      - enable: True
        serverAddresses:
        - 255.255.255.1
        servicePort: 8080
    lbSelectedRule:
      class: iRule
      iRule: when LB_SELECTED {log local0. "Selected server [LB::server]"}
      remark: Log load balanced server
    policyEnforcement:
      allTransactions: False
      class: Enforcement_Policy
      enable: True
      rules:
      - name: testPolicyRule1
        precedence: 1
        modifyHttpHeader:
          headerName: myHeaderName
          operation: insert
          valueContent: myHeaderValue
          valueType: string
        tcpAnalyticsEnabled: True
        tcpOptimizationDownlink:
          use: profileTcpClient
        tcpOptimizationUplink:
          use: profileTcpServer
      - name: testPolicyRule2
        precedence: 1
        dscpMarkingDownlink: 0
        dscpMarkingUplink: 0
        classificationFilters:
        - application:
            bigip: /Common/acrobat
          invertMatch: True
          name: testClassFilter1
        - category:
            bigip: /Common/Audio
          invertMatch: True
          name: testClassFilter2
        gateStatusEnabled: True
    policyEnforcementDefault:
      class: Enforcement_Policy
      rules:
      - name: enforcementPolicyRuleDefault
        precedence: 10
    profileClassification:
      class: Classification_Profile
      preset:
        bigip: /Common/ce_pem
    profileIPOther:
        class: IP_Other_Profile
    profileSpm:
      class: Enforcement_Profile
      connectionOptimizationEnabled: True
      policiesGlobalHighPrecedence:
      - use: policyEnforcement
      policiesUnknownSubscribers:
      - use: policyEnforcementDefault
    profileSubscriberManagement:
      class: Enforcement_Subscriber_Management_Profile
      serverSideSessionsEnabled: True
    profileTcpClient:
      autoProxyBufferSize: True
      autoReceiveWindowSize: True
      autoSendBufferSize: True
      class: TCP_Profile
      congestionControl: woodside
      earlyRetransmit: True
      enhancedLossRecovery: True
      fastOpen: True
      fastOpenCookieExpiration: 21600
      idleTimeout: 300
      initCwnd: 16
      initRwnd: 16
      maxSegmentSize: 0
      minimumRto: 1000
      mptcp: passthrough
      proxyBufferHigh: 262144
      proxyBufferLow: 196608
      proxyMSS: True
      receiveWindowSize: 131072
      sendBufferSize: 262144
      synRtoBase: 3000
      tailLossProbe: True
      verifiedAccept: False
    profileTcpServer:
      autoProxyBufferSize: True
      autoReceiveWindowSize: True
      autoSendBufferSize: True
      class: TCP_Profile
      congestionControl: woodside
      earlyRetransmit: True
      enhancedLossRecovery: True
      fastOpen: True
      fastOpenCookieExpiration: 21600
      idleTimeout: 300
      initCwnd: 16
      initRwnd: 16
      maxSegmentSize: 0
      minimumRto: 1000
      mptcp: passthrough
      proxyBufferHigh: 262144
      proxyBufferLow: 196608
      proxyMSS: True
      receiveWindowSize: 131072
      sendBufferSize: 262144
      synRtoBase: 3000
      tailLossProbe: True
      verifiedAccept: False
    profileL4:
      class: L4_Profile
    serviceAddress:
      class: Service_Address
      arpEnabled: False
      spanningEnabled: True
      virtualAddress: 0.0.0.0
  gilan_any:
    class: Application
    template: generic
    serviceMain:
      allowVlans:
      - bigip: /Common/pgw_dag
      class: Service_Generic
      iRules:
      - /f5vnf/Shared/lbSelectedRule
      layer4: any
      profileClassification:
        use: /f5vnf/Shared/profileClassification
      profileEnforcement:
        use: /f5vnf/Shared/profileSpm
      profileIPOther:
        use: /f5vnf/Shared/profileIPOther
      profileL4:
        use: /f5vnf/Shared/profileL4
      profileSubscriberManagement:
        use: /f5vnf/Shared/profileSubscriberManagement
      snat: none
      lastHop: disable
      translateServerAddress: False
      translateServerPort: False
      virtualAddresses:
      - use: /f5vnf/Shared/serviceAddress
      virtualPort: 0
  gilan_tcp:
    class: Application
    template: tcp
    serviceMain:
      allowVlans:
      - bigip: /Common/pgw_dag
      class: Service_TCP
      iRules:
      - /f5vnf/Shared/lbSelectedRule
      layer4: tcp
      profileClassification:
        use: /f5vnf/Shared/profileClassification
      profileEnforcement:
        use: /f5vnf/Shared/profileSpm
      profileL4:
        use: /f5vnf/Shared/profileL4
      profileTCP:
        bigip: /Common/f5-tcp-mobile
      profileSubscriberManagement:
        use: /f5vnf/Shared/profileSubscriberManagement
      snat: none
      lastHop: disable
      translateServerAddress: False
      translateServerPort: False
      virtualAddresses:
      - use: /f5vnf/Shared/serviceAddress
      virtualPort: 0
  gilan_udp:
    class: Application
    template: udp
    serviceMain:
      allowVlans:
      - bigip: /Common/pgw_dag
      class: Service_UDP
      iRules:
      - /f5vnf/Shared/lbSelectedRule
      layer4: udp
      profileClassification:
        use: /f5vnf/Shared/profileClassification
      profileEnforcement:
        use: /f5vnf/Shared/profileSpm
      profileL4:
        use: /f5vnf/Shared/profileL4
      profileSubscriberManagement:
        use: /f5vnf/Shared/profileSubscriberManagement
      profileUDP:
        bigip: /Common/udp_decrement_ttl
      snat: none
      lastHop: disable
      translateServerAddress: False
      translateServerPort: False
      virtualAddresses:
      - use: /f5vnf/Shared/serviceAddress
      virtualPort: 0
  gilan_http:
    class: Application
    template: http
    serviceMain:
      allowVlans:
      - bigip: /Common/pgw_dag
      class: Service_HTTP
      iRules:
      - /f5vnf/Shared/lbSelectedRule
      layer4: tcp
      profileClassification:
        use: /f5vnf/Shared/profileClassification
      profileEnforcement:
        use: /f5vnf/Shared/profileSpm
      profileHTTP:
        bigip: /Common/http-transparent
      profileL4:
        use: /f5vnf/Shared/profileL4
      profileSubscriberManagement:
        use: /f5vnf/Shared/profileSubscriberManagement
      profileTCP:
        bigip: /Common/f5-tcp-mobile
      snat: none
      lastHop: disable
      translateServerAddress: False
      translateServerPort: False
      virtualAddresses:
      - use: /f5vnf/Shared/serviceAddress
      virtualPort: 80
  gilan_inbound:
    class: Application
    template: generic
    serviceMain:
      allowVlans:
      - bigip: /Common/pdn_dag
      class: Service_Generic
      iRules:
      - /f5vnf/Shared/lbSelectedRule
      layer4: any
      profileL4:
        use: /f5vnf/Shared/profileL4
      profileSubscriberManagement:
        use: /f5vnf/Shared/profileSubscriberManagement
      snat: none
      translateServerAddress: False
      translateServerPort: False
      virtualAddresses:
      - use: /f5vnf/Shared/serviceAddress
      virtualPort: 0



# AS3 declaration used for CGNAT implementations
# vnf_as3_nsd_payload:
  class: ADC
  schemaVersion: 3.0.0
  id: cfy_vnf_01
  label: vnf
  remark: VNF
  f5vnf:
    class: Tenant
    Shared:
      class: Application
      template: shared
      profileDiameterEndpointOcs:
        class: Enforcement_Diameter_Endpoint_Profile
        supportedApps:
        - Gy
        destinationRealm: f5net.com
        originHost: pcef.f5net.com
        originRealm: f5net.com
      profileDiameterEndpointPcrf:
        class: Enforcement_Diameter_Endpoint_Profile
        supportedApps:
        - Gx
        destinationRealm: f5net.com
        originHost: pcef.f5net.com
        originRealm: f5net.com
      endpointForwarding:
        addressTranslationEnabled: False
        class: Enforcement_Forwarding_Endpoint
        defaultPersistenceType: disabled
        fallbackPersistenceType: disabled
        persistenceHashSettings:
          length: 1024
          offset: 0
        pool:
          use: poolForwarding
        portTranslationEnabled: False
        sourcePortAction: preserve
      endpointInterception:
        class: Enforcement_Interception_Endpoint
        persistence: disabled
        pool:
          use: poolInterception
      endpointServiceChain:
        class: Enforcement_Service_Chain_Endpoint
        serviceEndpoints:
        - forwardingEndpoint:
            use: endpointForwarding
          name: myServiceEndpoint
          sourceVLAN:
            bigip: /Common/pgw_dag
          steeringPolicy:
            use: policyEnforcement
      poolForwarding:
        class: Pool
        members:
        - enable: True
          serverAddresses:
          - 255.255.255.2
          servicePort: 8081
      poolInterception:
        class: Pool
        members:
        - enable: True
          serverAddresses:
          - 255.255.255.1
          servicePort: 8080
      lbSelectedRule:
        class: iRule
        iRule: when LB_SELECTED {log local0. "Selected server [LB::server]"}
        remark: Log load balanced server
      policyEnforcement:
        allTransactions: False
        class: Enforcement_Policy
        enable: True
        rules:
        - name: testPolicyRule1
          precedence: 1
          modifyHttpHeader:
            headerName: myHeaderName
            operation: insert
            valueContent: myHeaderValue
            valueType: string
          tcpAnalyticsEnabled: True
          tcpOptimizationDownlink:
            use: profileTcpClient
          tcpOptimizationUplink:
            use: profileTcpServer
        - name: testPolicyRule2
          precedence: 1
          dscpMarkingDownlink: 0
          dscpMarkingUplink: 0
          classificationFilters:
          - application:
              bigip: /Common/acrobat
            invertMatch: True
            name: testClassFilter1
          - category:
              bigip: /Common/Audio
            invertMatch: True
            name: testClassFilter2
          gateStatusEnabled: True
      policyEnforcementDefault:
        class: Enforcement_Policy
        rules:
        - name: enforcementPolicyRuleDefault
          precedence: 10
      profileClassification:
        class: Classification_Profile
        preset:
          bigip: /Common/ce_pem
      profileIPOther:
          class: IP_Other_Profile
      profileSpm:
        class: Enforcement_Profile
        connectionOptimizationEnabled: True
        policiesGlobalHighPrecedence:
        - use: policyEnforcement
        policiesUnknownSubscribers:
        - use: policyEnforcementDefault
      profileSubscriberManagement:
        class: Enforcement_Subscriber_Management_Profile
        serverSideSessionsEnabled: True
      profileTcpClient:
        autoProxyBufferSize: True
        autoReceiveWindowSize: True
        autoSendBufferSize: True
        class: TCP_Profile
        congestionControl: woodside
        earlyRetransmit: True
        enhancedLossRecovery: True
        fastOpen: True
        fastOpenCookieExpiration: 21600
        idleTimeout: 300
        initCwnd: 16
        initRwnd: 16
        maxSegmentSize: 0
        minimumRto: 1000
        mptcp: passthrough
        proxyBufferHigh: 262144
        proxyBufferLow: 196608
        proxyMSS: True
        receiveWindowSize: 131072
        sendBufferSize: 262144
        synRtoBase: 3000
        tailLossProbe: True
        verifiedAccept: False
      profileTcpServer:
        autoProxyBufferSize: True
        autoReceiveWindowSize: True
        autoSendBufferSize: True
        class: TCP_Profile
        congestionControl: woodside
        earlyRetransmit: True
        enhancedLossRecovery: True
        fastOpen: True
        fastOpenCookieExpiration: 21600
        idleTimeout: 300
        initCwnd: 16
        initRwnd: 16
        maxSegmentSize: 0
        minimumRto: 1000
        mptcp: passthrough
        proxyBufferHigh: 262144
        proxyBufferLow: 196608
        proxyMSS: True
        receiveWindowSize: 131072
        sendBufferSize: 262144
        synRtoBase: 3000
        tailLossProbe: True
        verifiedAccept: False
      profileL4:
        class: L4_Profile
      serviceAddress:
        class: Service_Address
        arpEnabled: False
        icmpEcho: disable
        spanningEnabled: True
        trafficGroup: /Common/traffic-group-local-only
        virtualAddress: 0.0.0.0
    gilan_any:
      class: Application
      template: generic
      serviceMain:
        allowVlans:
        - bigip: /Common/pgw_dag
        class: Service_Generic
        iRules:
        - /f5vnf/Shared/lbSelectedRule
        layer4: any
        profileClassification:
          use: /f5vnf/Shared/profileClassification
        profileIPOther:
          use: /f5vnf/Shared/profileIPOther
        profileL4:
          use: /f5vnf/Shared/profileL4
        profileSubscriberManagement:
          use: /f5vnf/Shared/profileSubscriberManagement
        snat: none
        lastHop: disable
        translateServerAddress: False
        translateServerPort: False
        virtualAddresses:
        - use: /f5vnf/Shared/serviceAddress
        virtualPort: 0
    gilan_http:
      class: Application
      template: http
      serviceMain:
        allowVlans:
        - bigip: /Common/pgw_dag
        class: Service_HTTP
        iRules:
        - /f5vnf/Shared/lbSelectedRule
        layer4: tcp
        profileClassification:
          use: /f5vnf/Shared/profileClassification
        profileHTTP:
          bigip: /Common/http-transparent
        profileL4:
          use: /f5vnf/Shared/profileL4
        profileSubscriberManagement:
          use: /f5vnf/Shared/profileSubscriberManagement
        profileTCP:
          bigip: /Common/f5-tcp-mobile
        snat: none
        lastHop: disable
        translateServerAddress: False
        translateServerPort: False
        virtualAddresses:
        - use: /f5vnf/Shared/serviceAddress
        virtualPort: 80
        policyNAT:
          use: /f5vnf/gilan_http/natPolicy
      natDestinationAddressList:
        addresses:
        - 0.0.0.0/0
        class: Firewall_Address_List
      natDestinationPortList:
        class: Firewall_Port_List
        ports:
        - 1-65535
      natPolicy:
        class: NAT_Policy
        rules:
        - destination:
            addressLists:
            - use: /f5vnf/gilan_http/natDestinationAddressList
            portLists:
            - use: /f5vnf/gilan_http/natDestinationPortList
          name: nat_tcp
          protocol: tcp
          source:
            addressLists:
            - use: /f5vnf/gilan_http/natSourceAddressList
            portLists:
            - use: /f5vnf/gilan_http/natSourcePortList
          sourceTranslation:
            use: /f5vnf/gilan_http/natSourceTranslation
      natSourceAddressList:
        addresses:
        - 10.8.0.0/24
        class: Firewall_Address_List
      natSourcePortList:
        class: Firewall_Port_List
        ports:
        - 1-65535
      natSourceTranslation:
        addresses:
        - 255.255.255.255/32
        class: NAT_Source_Translation
        clientConnectionLimit: 0
        hairpinModeEnabled: false
        inboundMode: explicit
        mapping:
          mode: address-pooling-paired
          timeout: 300
        patMode: pba
        portBlockAllocation:
          blockIdleTimeout: 3600
          blockLifetime: 0
          blockSize: 64
          clientBlockLimit: 1
          zombieTimeout: 0
        ports:
        - 1-65535
        routeAdvertisement: true
        type: dynamic-pat
