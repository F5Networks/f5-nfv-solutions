tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/f5-vnfm/1.0/types.yaml
  - http://www.getcloudify.org/spec/f5-vnfm/1.0/service_layer_workflows/service.yaml
  - http://www.getcloudify.org/spec/f5-vnfm/1.0/cloudify-utilities-plugin/plugin.yaml
  - plugin:f5-gilan-plugin
  - plugin:f5-ric-plugin
  - services/F5-VNF-Service-Layer-Base.yaml

inputs:
  mgmt_subnet:
    type: string
    description: >
      The name of the pre-existing
      management network subnet
  mgmt_sg_name:
    type: string
    description: >
      The name of the pre-existing
      management security group
  internal_subnet:
    type: string
    description: >
     The name of the pre-existing internal
     network subnet
  external_subnet:
    type: string
    description: >
     The name of the pre-existing external
     network subnet
  internal_sg_name:
    type: string
    description: >
      The name of the pre-existing internal security group
  external_sg_name:
    type: string
    description: >
      The name of the pre-existing external security group
node_templates:
  render:
    type: f5.gilan.nodes.render.VimData
    properties:
      vim: openstack
      blueprints:
        nagios: {concat: [{get_property: [render, vim]}, _, cgnat_nagios.yaml]}
        base_ltm_group: {concat: [{get_property: [render, vim]}, _, base_ltm_group.yaml]}
        base_vnfd_ltm_ve: {concat: [{get_property: [render, vim]}, _, base_vnfd_ltm_ve.yaml]}
      networks:
        mgmt:
          net_id: { get_input: mgmt_net }
          subnet_id: { get_input: mgmt_subnet }
          mgmt_sg_id: { get_input: mgmt_sg_name }
          mgmt_tcp_port: '443'
        internal:
          net_id: { get_input: internal_net }
          subnet_id: { get_input: internal_subnet }
          sg_id: { get_input: internal_sg_name }
        external:
          net_id: { get_input: external_net }
          subnet_id: { get_input: external_subnet }
          sg_id: { get_input: external_sg_name }

  openstack_validator:
    type: f5.gilan.nodes.InputValidator
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          inputs:
            custom_format:
              - name: "sw_ref"
                value: {get_input: sw_ref_ltm}
                format:
                  data:
                    image: {}
                    flavor: {}
                    availability_zone: {}
                  revision: {}